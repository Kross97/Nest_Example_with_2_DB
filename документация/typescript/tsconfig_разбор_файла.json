{
  // нужен для правильной работы import при использовании ts-node
  "ts-node": {
    "compilerOptions": {
      "module": "commonjs"
    }
  },
  "compilerOptions": {
    // задает директорию куда складываются файлы после компиляции tsc
    "outDir": "./dist_ts",

    // Если указано, все глобальные (немодульные) файлы будут объединены в один указанный выходной файл.
    // "outFile": "./dist/out_file.js",

    // работа с корневыми каталогами (РАСПИСАТЬ НУЖНО)
    // "rootDir": "./", // вляет на область видимость импортов (если это проект внутри основного проекта)
    //"rootDirs": [],


    "target":"ESNEXT",
    "module":"commonjs",
    "sourceMap": true,
    "moduleResolution": "node",

    /**
       Эти две настройки нужны для корректной работы импорта по умолчанию
    */
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,

    // если он включен то после компиляции (tsc) рядом с файлом js будет файл .d.ts описывающий этот файл (через declare)
    "declaration": true,
    // папка куда будут помещены файлы деклараций
    "declarationDir": "./dist_types",
    // при включении помогает редакторам переходить к исходному ts файлу через декларации
    "declarationMap": true,


    // Устанавливает базовый каталог, из которого разрешаются имена модулей
    // При использовании "baseUrl": "./" TypeScript будет искать файлы, находящиеся в той же папке, что и tsconfig.json
    // Начиная с TypeScript 4.1, baseUrl больше не требуется устанавливать при использовании paths.

    "baseUrl": "./",
    "rootDir": "./",

    // Псевдонимы путей
    "paths": {
      "$nest_project_db_source": ["../src/db-source/index.ts"],
      "$express_db_source": ["./data_source/index.ts"],
      "$nest_project/entities/*": ["../src/entities/*"],
      "$nest_project/userDb": ["../src/modules/user/databases_layers/postgres/user.postgres.db.ts"]
    }

  },
  "exclude": [
    "node_modules"
  ]
}