#1 Требуется определить хотя бы одну инструкцию (ENTRYPOINT или CMD) (для запуска).
Если вы не определите ни одной из них, то получите сообщение об ошибке.
(CMD идет после ENTRYPOINT)

Если нет ни одной из этих команд будет ошибка:

$ docker run alpine
docker: Error response from daemon: No command specified.
See 'docker run --help'.

#2 Если во время выполнения определена только одна из инструкций, то и CMD и ENTRYPOINT
#  будут иметь одинаковый эффект.

#3  И для CMD, и для ENTRYPOINT существуют режимы shell и exec.

     exec форма:  ["executable", "param1", "param2"]
     shell форма:  command param1 param2

     только для CMD:
     CMD ["param1","param2"] (форма exec, в качестве параметров по умолчанию ENTRYPOINT)
     Если нет исполняемой команды ("executable"), то эти параметры подставляются к команде ENTRYPOINT как параметры по умолчанию



============================================================
#4 Режим exec является рекомендуемым.

   Отправленные в докер контейнер сигналы перенаправляются на запущенный внутри
   контейнера процесс (идентификатором PID, равным 1).
   4.1 Если запускать в режиме exec то сигнал о выключении идет сразу в запущенный процесс и останавливает его
   4.2 Если запускать в режиме оболочки запускается дополнительный процесс /bin/sh и сигналы о закрытии поступают в него,
       а не в нужный нам процесс, из за этого могут быть проблемы с выходом (остановкой контейнера)

       Если использовать режим оболочки рекомендуется использовать ее вместе с командой exec:
       ENTRYPOINT exec ping www.google.com

==============================================================

#5 Если запускать CMD или ENTRYPOINT в режиме exec , то нельзя использовать переменные окржуения в них
#6 Если вы используете режим shell для ENTRYPOINT, CMD игнорируется.
#7 При использовании режима exec для ENTRYPOINT аргументы CMD добавляются в конце.

   Пример:

   $ cat Dockerfile
   FROM alpine
   ENTRYPOINT ["ls", "/usr"]
   CMD ["/var"]

   $ docker build -t test .

   $ docker run test
   /usr:
   bin
   lib
   local
   sbin
   share

   /var:
   cache
   empty
   lib
   local
   lock
   log
   opt
   run
   spool
   tmp

 Аргумент /var был добавлен к нашей инструкции ENTRYPOINT, что позволило эффективно запустить команду ls/usr/var

#8 При использовании режима exec для инструкции ENTRYPOINT необходимо использовать режим exec и для инструкции CMD.
   Если этого не сделать, Docker попытается добавить sh -c в уже добавленные аргументы,
   что может привести к некоторым непредсказуемым результатам.

#9 Инструкции ENTRYPOINT и CMD могут быть переопределены с помощью флагов командной строки.

    9.1 Флаг --entrypoint может быть использован, чтобы переопределить инструкцию ENTRYPOINT:
        docker run --entrypoint [my_entrypoint] test

    9.2 Все, что следует после названия образа в команде docker run, переопределяет инструкцию CMD:
        docker run test [command 1] [arg1] [arg2]

        Пример:

        $ cat Dockerfile
        FROM alpine
        ENTRYPOINT ["ping"]
        CMD ["www.google.com"]

        $ docker run test
        PING www.google.com (172.217.7.164): 56 data bytes

        $ docker run test www.yahoo.com  (все что после имени изображение переписало параметры CMD)
        PING www.yahoo.com (98.139.183.24): 56 data bytes