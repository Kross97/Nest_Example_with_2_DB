
==========================================Моя_заметка===================================================
#1 VOLUME в Dockerfile - здесь нельзя монтировать тома с внешним контекстом хоста (файловой системой хоста)
  он только создает тома внутри контейнера, связывая их с томами хоста (расположеных в папке докер, вне текущего проекта)
  эти тома имеют в имени длинные id (называются анонимные тома) и не удобны в использовании

 Для монтирования с локальным контекстом хоста нужно использовать cli (-v, --volume)

 docker run -v $(pwd)/volume:/volume IMAGE
 docker run -v ./volume:/volume IMAGE

=================================================================================================

# Если вы запускаете контейнер с томом, который еще не существует, Docker создает том для вас.
  При дальнейших запусках он будет использовать уже существующий том

# Том (Volume) не увеличивает размер контейнеров, использующих его,
  а содержимое тома существует за пределами жизненного цикла данного контейнера.

# Изменение тома из Dockerfile : Если какие-либо шаги сборки изменят данные в томе после его объявления,
  эти изменения будут отменены при использовании устаревшего сборщика.
  При использовании Buildkit изменения будут сохранены.


# Каталог хоста объявляется во время выполнения контейнера : Каталог хоста (точка монтирования)
  по своей природе зависит от хоста. Это необходимо для сохранения переносимости образа,
  поскольку нельзя гарантировать, что данный каталог хоста будет доступен на всех хостах.
  По этой причине вы не можете смонтировать каталог хоста из Dockerfile.


POWER_SHELL: docker run -v $pwd/volumehost4:/build --name test_front4 -p 8008:3000 0b75eeacaa3d

https://stackoverflow.com/questions/41935435/understanding-volume-instruction-in-dockerfile - о Dockefile VOLUME